{"version":3,"file":"static/js/470.90079186.chunk.js","mappings":"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","sources":["webpack://slim-mom-frontend/./src/pages/ForgotPasswordPage/ForgotPasswordPage.module.css?f1b2","webpack://slim-mom-frontend/./src/components/ForgotPasswordForm/ForgotPasswordForm.module.css?0487","components/ForgotPasswordForm/ForgotPasswordForm.jsx","pages/ForgotPasswordPage/ForgotPasswordPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ForgotPasswordPage_container__Z-X75\",\"title\":\"ForgotPasswordPage_title__OcH8+\",\"icon\":\"ForgotPasswordPage_icon__e0nN9\"};","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"ForgotPasswordForm_block__d7+WJ\",\"form\":\"ForgotPasswordForm_form__ztdlt\",\"text\":\"ForgotPasswordForm_text__x7KMY\",\"status\":\"ForgotPasswordForm_status__hXuPA\",\"error\":\"ForgotPasswordForm_error__ZT9jC\",\"btn\":\"ForgotPasswordForm_btn__EZ6L-\",\"label\":\"ForgotPasswordForm_label__cdhNO\",\"formInput\":\"ForgotPasswordForm_formInput__K28es\",\"passInput\":\"ForgotPasswordForm_passInput__Kh3sS\",\"btnCont\":\"ForgotPasswordForm_btnCont__1xGiK\",\"passVisBtn\":\"ForgotPasswordForm_passVisBtn__LRrc5\",\"passBtnImg\":\"ForgotPasswordForm_passBtnImg__qnn7d\",\"errorMessage\":\"ForgotPasswordForm_errorMessage__cs7cj\"};","import s from './ForgotPasswordForm.module.css';\nimport eyeOpened from 'assets/icons/eye.svg';\nimport eyeClosed from 'assets/icons/eye-blocked.svg';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getEmailStatus, getKeyStatus } from 'redux/auth/auth-selector';\nconst ForgotPasswordForm = ({ handleSubmitEmail, handleSubmitKey, handleSubmitPassword }) => {\n  const emailStatus = useSelector(getEmailStatus);\n  const keyStatus = useSelector(getKeyStatus);\n\n  const [state, setState] = useState({\n    email: '',\n    key: '',\n    password: '',\n    repeatPassword: '',\n  });\n  const { email, key, password, repeatPassword } = state;\n  const [isPassShown, setIsPassShown] = useState(false);\n  const [isRepeatPassShown, setIsRepeatPassShown] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n  const onSubmitEmail = e => {\n    e.preventDefault();\n    handleSubmitEmail(email);\n  };\n  const onSubmitKey = e => {\n    e.preventDefault();\n    handleSubmitKey(key);\n  };\n  const onSubmitPassword = e => {\n    e.preventDefault();\n    handleSubmitPassword(password);\n  };\n\n  const checkKeyDisabled = key.length !== 36;\n  const checkEmail =\n    email.length >= 8 && email.split('').includes('@') & email.split('').includes('.');\n  const checkPassLength = password.length >= 8;\n  const checkRepeatPassLength = repeatPassword.length >= 8;\n  const samePassword =\n    keyStatus && checkPassLength && checkRepeatPassLength && password !== repeatPassword;\n  return (\n    <>\n      <div className={s.block}>\n        {!emailStatus && <p className={s.text}>The activation key will be send to your email</p>}\n        <form onSubmit={onSubmitEmail} className={s.form}>\n          <input\n            onChange={handleChange}\n            className={s.formInput}\n            id=\"email\"\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            required\n            min-length=\"8\"\n            placeholder=\"Enter email of your account\"\n            title=\"Please enter valid email address, for example 'example@gmail.com'\"\n          />\n          <button type=\"submit\" disabled={!checkEmail} className={s.btn}>\n            Send key\n          </button>\n        </form>\n        {emailStatus && <p className={s.status}>The activation key sent to your email</p>}\n      </div>\n      {emailStatus && (\n        <div className={s.block}>\n          <form onSubmit={onSubmitKey} className={s.form}>\n            <input\n              onChange={handleChange}\n              className={s.formInput}\n              id=\"key\"\n              type=\"text\"\n              name=\"key\"\n              value={key}\n              required\n              title=\"Please enter activation key (36 symbols) \"\n              placeholder=\"Enter activation key from email message\"\n            />\n            <button type=\"submit\" disabled={checkKeyDisabled} className={s.btn}>\n              Check key\n            </button>\n          </form>\n          {keyStatus && <p className={s.status}>The activation key approved</p>}\n        </div>\n      )}\n      {keyStatus && (\n        <div className={s.block}>\n          <form onSubmit={onSubmitPassword} className={s.form}>\n            <label className={s.label} htmlFor=\"password\">\n              <input\n                onChange={handleChange}\n                id=\"password\"\n                name=\"password\"\n                value={password}\n                className={s.formInput + ' ' + s.passInput}\n                type={isPassShown ? 'text' : 'password'}\n                title=\"Please enter your new password. Minimum length 8 symbols\"\n                placeholder=\"New password *\"\n                min-length=\"8\"\n                required\n              />\n              <button\n                className={s.passVisBtn}\n                onClick={() => {\n                  setIsPassShown(!isPassShown);\n                }}\n                type=\"button\"\n              >\n                <img\n                  className={s.pswdBtnImg}\n                  src={isPassShown ? eyeOpened : eyeClosed}\n                  alt=\"Button show/hide password\"\n                />\n              </button>\n            </label>\n            <label className={s.label} htmlFor=\"repeatPassword\">\n              <input\n                onChange={handleChange}\n                id=\"repeatPassword\"\n                name=\"repeatPassword\"\n                value={repeatPassword}\n                className={s.formInput + ' ' + s.passInput}\n                type={isRepeatPassShown ? 'text' : 'password'}\n                title=\"Please repeat your new password. Minimum length 8 symbols\"\n                placeholder=\"Repeat new password *\"\n                min-length=\"8\"\n                required\n              />\n              <button\n                className={s.passVisBtn}\n                onClick={() => {\n                  setIsRepeatPassShown(!isRepeatPassShown);\n                }}\n                type=\"button\"\n              >\n                <img\n                  className={s.pswdBtnImg}\n                  src={isRepeatPassShown ? eyeOpened : eyeClosed}\n                  alt=\"Button show/hide password\"\n                />\n              </button>\n            </label>\n\n            <button type=\"submit\" disabled={samePassword} className={s.btn}>\n              Save password\n            </button>\n          </form>\n          {samePassword && <p className={s.error}>Passwords are not the same. Check it</p>}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import s from './ForgotPasswordPage.module.css';\nimport { ReactComponent as BackArrow } from 'assets/icons/back-arrow.svg';\nimport ForgotPasswordForm from 'components/ForgotPasswordForm/ForgotPasswordForm';\nimport { getLoadingStatus, gettEmailOnCheck, getPasswordStatus } from 'redux/auth/auth-selector';\nimport { useSelector } from 'react-redux';\nimport { Loader } from 'components';\nimport { useDispatch } from 'react-redux';\nimport { Link, Navigate } from 'react-router-dom';\nimport { getActivationKey, getKeyVerify, saveNewPassword } from 'redux/auth/auth-operations';\n\nconst ForgotPasswordPage = () => {\n  const passwordStatus = useSelector(getPasswordStatus);\n  const isLoading = useSelector(getLoadingStatus);\n  const emailOnCheck = useSelector(gettEmailOnCheck);\n  const dispatch = useDispatch();\n  const sendEmail = email => {\n    dispatch(getActivationKey(email));\n  };\n  const checkKeyStatus = key => {\n    dispatch(getKeyVerify(key));\n  };\n  const createNewPassword = password => {\n    dispatch(saveNewPassword({ password, email: emailOnCheck }));\n  };\n  return (\n    <main>\n      <div className={s.container}>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <>\n            <Link to=\"/login\">\n              <BackArrow className={s.icon} />\n            </Link>\n            <h3 className={s.title}>Forgot password</h3>\n            <ForgotPasswordForm\n              handleSubmitEmail={sendEmail}\n              handleSubmitKey={checkKeyStatus}\n              handleSubmitPassword={createNewPassword}\n            />\n          </>\n        )}\n      </div>\n      {passwordStatus && <Navigate to=\"/login\" />}\n    </main>\n  );\n};\n\nexport default ForgotPasswordPage;\n"],"names":["handleSubmitEmail","handleSubmitKey","handleSubmitPassword","emailStatus","useSelector","getEmailStatus","keyStatus","getKeyStatus","useState","email","key","password","repeatPassword","state","setState","isPassShown","setIsPassShown","isRepeatPassShown","setIsRepeatPassShown","handleChange","e","target","name","value","prevState","checkKeyDisabled","length","checkEmail","split","includes","checkPassLength","checkRepeatPassLength","samePassword","className","s","onSubmit","preventDefault","onChange","id","type","required","placeholder","title","disabled","htmlFor","onClick","src","eyeOpened","eyeClosed","alt","passwordStatus","getPasswordStatus","isLoading","getLoadingStatus","emailOnCheck","gettEmailOnCheck","dispatch","useDispatch","to","getActivationKey","getKeyVerify","saveNewPassword"],"sourceRoot":""}