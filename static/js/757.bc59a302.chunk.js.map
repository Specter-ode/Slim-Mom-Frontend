{"version":3,"file":"static/js/757.bc59a302.chunk.js","mappings":"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","sources":["webpack://slim-mom-frontend/./src/pages/RegistrationPage/RegistrationPage.module.css?b753","webpack://slim-mom-frontend/./src/components/RegistrationForm/RegistrationForm.module.css?5637","components/RegistrationForm/RegistrationForm.js","pages/RegistrationPage/RegistrationPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegistrationPage_container__o9QxY\",\"title\":\"RegistrationPage_title__pXe0V\",\"block\":\"RegistrationPage_block__CFZqZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"loginForm\":\"RegistrationForm_loginForm__PNfPw\",\"googleBtn\":\"RegistrationForm_googleBtn__32hWw\",\"formInput\":\"RegistrationForm_formInput__m+H0J\",\"passInput\":\"RegistrationForm_passInput__m655N\",\"btnCont\":\"RegistrationForm_btnCont__GcnzE\",\"pswdVisBtn\":\"RegistrationForm_pswdVisBtn__lIwYN\",\"pswdBtnImg\":\"RegistrationForm_pswdBtnImg__ZD7sr\",\"errorMessage\":\"RegistrationForm_errorMessage__I5ZMQ\"};","import GoogleLogo from '../../assets/icons/googleLogo.svg';\nimport FacebookText from '../../assets/icons/facebookText.svg';\nimport eyeOpened from '../../assets/icons/eye.svg';\nimport eyeClosed from '../../assets/icons/eye-blocked.svg';\nimport { Button } from 'components';\nimport s from './RegistrationForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport { handleRegistration } from '../../redux/auth/auth-operations';\n\nconst { REACT_APP_BACKEND_URL = 'http://localhost:4000/aoi' } = process.env;\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Name length must be at least 2 characters long')\n    .required('Name is required'),\n  email: Yup.string().email('Invalid email').required('Email is required'),\n  password: Yup.string()\n    .min(6, 'Password must contain 6 or more characters!')\n    .required('Password is required'),\n});\n\nconst RegistrationForm = () => {\n  const [isPswdShown, setIsPswdShown] = useState(false);\n  const dispatch = useDispatch();\n  const [errorMessage, setErrorMessage] = useState('');\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={(values, actions) => {\n          dispatch(handleRegistration(values)).then(a => {\n            console.log('Registration', a);\n            if (a?.type === 'users/signup/rejected') {\n              setErrorMessage(a?.payload);\n            }\n            console.log(errorMessage);\n          });\n          actions.resetForm();\n        }}\n      >\n        {({ handleSubmit, errors, touched }) => (\n          <Form className={s.loginForm}>\n            <Field\n              className={s.formInput}\n              type=\"name\"\n              name=\"name\"\n              title=\"Please enter your name or nickname'\"\n              placeholder=\"Name *\"\n              min-length=\"2\"\n              required\n              id=\"name\"\n            />\n            {errors.name && touched.name ? (\n              <div className={s.errorMessage}>* {errors.name}</div>\n            ) : null}\n            {(errorMessage !== '\"email\" must be a valid email' ||\n              errorMessage !== 'Email in use') &&\n            !touched.name ? (\n              <div className={s.errorMessage}>{errorMessage}</div>\n            ) : null}\n\n            <Field\n              className={s.formInput}\n              type=\"email\"\n              name=\"email\"\n              title=\"Please enter valid email address, for example  'example@gmail.com'\"\n              placeholder=\"Email *\"\n              min-length=\"6\"\n              required\n              id=\"email\"\n            />\n            {errors.email && touched.email ? (\n              <div className={s.errorMessage}>* {errors.email}</div>\n            ) : null}\n            {(errorMessage === '\"email\" must be a valid email' ||\n              errorMessage === 'Email in use') &&\n            !touched.email ? (\n              <div className={s.errorMessage}>{errorMessage}</div>\n            ) : null}\n\n            <Field\n              className={s.formInput + ' ' + s.passInput}\n              type={isPswdShown ? 'text' : 'password'}\n              name=\"password\"\n              title=\"Please enter your password. Minimum length 8 symbols\"\n              placeholder=\"Password *\"\n              min-length=\"8\"\n              required\n              id=\"password\"\n            />\n            <button\n              className={s.pswdVisBtn}\n              onClick={() => {\n                setIsPswdShown(!isPswdShown);\n              }}\n              type=\"button\"\n            >\n              <img\n                className={s.pswdBtnImg}\n                src={isPswdShown ? eyeOpened : eyeClosed}\n                alt=\"Button show/hide password\"\n              />\n            </button>\n            {errors.password && touched.password ? (\n              <div className={s.errorMessage}>* {errors.password}</div>\n            ) : null}\n            {errorMessage && errorMessage === 'Password is wrong' && !touched.password ? (\n              <div className={s.errorMessage}>{errorMessage}</div>\n            ) : null}\n\n            <div className={s.btnCont}>\n              <Button\n                text={'Register'}\n                width={182}\n                onClick={() => {\n                  handleSubmit();\n                }}\n              />\n              <a className={s.googleBtn} href={`${REACT_APP_BACKEND_URL}/users/google`}>\n                <img className={s.googleLogo} src={GoogleLogo} alt=\"Google logo\" />\n              </a>\n              <a className={s.googleBtn} href={`${REACT_APP_BACKEND_URL}/users/facebook`}>\n                <img className={s.googleLogo} src={FacebookText} alt=\"Facebook logo\" />\n              </a>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default RegistrationForm;\n","import s from './RegistrationPage.module.css';\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport { getLoadingStatus } from 'redux/auth/auth-selector';\nimport { useSelector } from 'react-redux';\nimport { Loader } from 'components';\n\nconst RegistrationPage = () => {\n  const isLoading = useSelector(getLoadingStatus);\n  const component = (\n    <>\n      <h3 className={s.title}>Register</h3>\n      <RegistrationForm />\n    </>\n  );\n  return (\n    <main>\n      <div className={s.container}>\n        {isLoading ? (\n          <div className={s.block}>\n            <Loader />\n          </div>\n        ) : (\n          component\n        )}\n      </div>\n    </main>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["process","REACT_APP_BACKEND_URL","SignupSchema","Yup","shape","name","min","required","email","password","useState","isPswdShown","setIsPswdShown","dispatch","useDispatch","errorMessage","setErrorMessage","initialValues","validationSchema","onSubmit","values","actions","handleRegistration","then","a","console","log","type","payload","resetForm","handleSubmit","errors","touched","className","s","title","placeholder","id","onClick","src","eyeOpened","eyeClosed","alt","text","width","href","GoogleLogo","FacebookText","isLoading","useSelector","getLoadingStatus","component"],"sourceRoot":""}